#!/usr/bin/env node

const program = require('commander')
const opt = require('../config/option')
const relative = require('../lib/relative')
const version = require('../package.json').version

program
  .version(version)
  .command('init <template> [project]')
  .description('指定一个模板，用其初始化一个项目')
  .option('-c, --clone', '使用git clone')
  .action(require('../command/init'))
  .on('--help', function () {
    console.log()
    console.log('  例如:')
    console.log()
    console.log('    $ talk init static demo')
    console.log('    $ talk init vue demo // 待更新')
    console.log()
  })

program
  .command('start [project]')
  .description('开发一个项目')
  .option('-o --open', '打开浏览器, 默认不打开')
  .option('-p --proxy', '开启联调模式，默认不开启')
  .option('-P --page <page>', '启动浏览器并打开指定页面，默认为导航页', 'nav')
  .action((project, option) => {
    opt.set(option)
    relative.setCwd(project && project !== '.' ? project : undefined)
    require('../command/start')(option)
  })

program
  .command('build [project]')
  .description('打包一个项目')
  .action(project => {
    relative.setCwd(project && project !== '.' ? project : undefined)
    require('../command/build')()
  })

program
  .command('*', { isDefault: true })
  .action(() => {
    program.help(txt => txt)
  })

program.parse(process.argv)
