#!/usr/bin/env node

const program = require('commander')
const pkg = require('../package.json')
const { setConfig } = require('../config')

program
  .version(pkg.version)
  .command('init <template> [projectName]')
  .description('指定一个模板，用其初始化一个项目')
  .option('-c, --clone', '使用git clone')
  .action(require('../command/init'))
  .on('--help', function () {
    console.log()
    console.log('  例如:')
    console.log()
    console.log('    $ talk init <模板名称> <项目名称>')
    console.log()
  })

program
  .command('start [projectName]')
  .description('开发一个项目')
  .option('-o --open', '打开浏览器')
  .option('-p --proxy', '开启联调模式')
  .option('-h --https', '开启https服务')
  .action((projectName, option) => {
    setConfig({
      projectName: !projectName || projectName === '.'
        ? '.'
        : projectName,
      open: option.open,
      proxy: option.proxy,
      https: option.https
    })

    require('../command/start')()
  })

program
  .command('build [projectName]')
  .description('打包一个项目')
  .option('-w --watch', '监听模式打包')
  .action((projectName, option) => {
    setConfig({
      projectName: !projectName || projectName === '.'
        ? '.'
        : projectName,
      watch: option.watch
    })

    require('../command/build')()
  })

program
  .command('*', { isDefault: true })
  .action(() => {
    program.help(txt => txt)
  })

program.parse(process.argv)
